/*
This module shows Load KPI report. It has some subcomponents.
*/
// vendor
import React, { Component } from "react";
import { connect } from "react-redux";
import { FormattedMessage, injectIntl } from "react-intl";
import {Input} from 'antd';
import _ from "lodash";

// proj
// import {
//     fetchReportOrders,
//     fetchReportOrdersFilterOptions,
//     setReportOrdersIncludeServicesDiscount,
//     setReportOrdersIncludeAppurtenanciesDiscount,
//     setReportOrdersQuery,
//     setReportOrdersStatus,
//     setReportOrdersCreationFromDate,
//     setReportOrdersCreationToDate,
//     setReportOrdersAppointmentFromDate,
//     setReportOrdersAppointmentToDate,
//     setReportOrdersDoneFromDate,
//     setReportOrdersDoneToDate,
//     setReportOrdersPage,
//     setReportOrdersAllFilters
// } from 'core/reportOrders/duck';
// import ReportOrdersFilterModal from 'modals/ReportOrdersFilterModal';
// import { setModal, resetModal, MODALS } from 'core/modals/duck';

import { Layout, Numeral } from "commons";
import {ReportLoadKPITable, ReportLoadKPIFilter} from 'components';
// import { ReportOrdersTable, ReportOrdersFilter } from "components";
// import { isForbidden, permissions } from "utils";

// own
import Styles from "./styles.m.css";
import Stats from './Stats';

const mapStateToProps = state => ({
    // tableData: state.reportOrders.tableData,
    // includeServicesDiscount: state.reportOrders.options.includeServicesDiscount,
    // includeAppurtenanciesDiscount: state.reportOrders.options.includeAppurtenanciesDiscount,
    // filter: state.reportOrders.filter,
    // page: state.reportOrders.filter.page,
    // stats: state.reportOrders.stats,
    // filterOptions: state.reportOrders.filterOptions,
    // modal: state.modals.modal,
    // reportOrdersFetching: state.ui.reportOrdersFetching,
});

const mapDispatchToProps = {
    // fetchReportOrders,
    // fetchReportOrdersFilterOptions,
    // setReportOrdersPage,
    // setReportOrdersIncludeServicesDiscount,
    // setReportOrdersIncludeAppurtenanciesDiscount,
    // setReportOrdersQuery,
    // setReportOrdersStatus,
    // setReportOrdersCreationFromDate,
    // setReportOrdersCreationToDate,
    // setReportOrdersAppointmentFromDate,
    // setReportOrdersAppointmentToDate,
    // setReportOrdersDoneFromDate,
    // setReportOrdersDoneToDate,
    // setReportOrdersAllFilters,

    // setModal,
    // resetModal,
};

@connect(
    mapStateToProps,
    mapDispatchToProps,
)
@injectIntl
export default class ReportLoadKPIPage extends Component {
    constructor(props) {
        super(props);

        // this.onOpenFilterModal = this.onOpenFilterModal.bind(this);
        // this.onCloseFilterModal = this.onCloseFilterModal.bind(this);
        // this.onSubmitFilterModal = this.onSubmitFilterModal.bind(this);
    }

    // componentDidMount() {
    //     this.props.fetchReportOrders();
    //     this.props.fetchReportOrdersFilterOptions();
    // }

    
    // onOpenFilterModal() {
    //     this.props.setModal(MODALS.REPORT_ORDERS_FILTER);
    // }

    // onCloseFilterModal() {
    //     this.props.resetModal();
    // }

    //This method takes filters generated by modal, overrides them in duck and fetch result
    // onSubmitFilterModal(filters) {
    //     const {
    //         setReportOrdersAllFilters,
    //         fetchReportOrders,
    //         resetModal
    //     } = this.props;
    //     setReportOrdersAllFilters(filters);
    //     console.log(filters);
    //     fetchReportOrders();
    //     resetModal();
    // }

    render() {
        const {
            // fetchReportOrders,
            // tableData,
            // setReportOrdersIncludeServicesDiscount,
            // setReportOrdersIncludeAppurtenanciesDiscount,
            // includeServicesDiscount,
            // includeAppurtenanciesDiscount,
            // filter,
            // stats,
            // setReportOrdersPage,
            // filterOptions,
            // reportOrdersFetching,

            // setReportOrdersQuery,
            // setReportOrdersStatus,
            // setReportOrdersCreationFromDate,
            // setReportOrdersCreationToDate,
            // setReportOrdersAppointmentFromDate,
            // setReportOrdersAppointmentToDate,
            // setReportOrdersDoneFromDate,
            // setReportOrdersDoneToDate,

            // modal,
        } = this.props;

        
        return (
            <Layout
                title={<FormattedMessage id="navigation.report_load_kpi" />}
                paper={false}
            >
                <div className={Styles.mainCont}>
                    <div className={Styles.header}>
                        <div className={Styles.filterCont}>
                            <ReportLoadKPIFilter />
                        </div>
                        <div className={Styles.statsCont}>
                            <Stats />
                        </div>
                    </div>
                </div>

                <ReportLoadKPITable />
            </Layout>
        );
    }
}
